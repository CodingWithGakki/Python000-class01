import jieba
import jieba.analyse
import pprint
import numpy as np

text = [
    '每个人都是孤独地出生，在这世间恍惚几十年并不漫长的日子转眼就远去了，然后再孤独地死去。 生命注定是个悲剧，因为我们从没有融入世界，世界永远是身外之物。如果有幸，能在茫茫人海寻得一个身体与灵魂都与自己万分契合的人，与之存在一种可以称之为爱情的联系，然后一起承受生命中不可逃离不可消除的深沉的宿命的孤独。可是这般的幸运艰深难得。有的已失去了爱的能力，有的爱的深沉却无处安放，有的死在这爱里……在所有的爱里，孤独有增无减。  生命只是一场幻梦。',
    '看第3遍开始越来越让我惊艳的已不是马尔克斯而是译者了。太牛逼了！这样的文字就算是母语创作也属上乘。尤其倒数第二代布恩迪亚在飓风中破译羊皮卷的全书结尾，笔触磅礴，美到让人惊怖。',
    '为什么我觉得不好看呢？是不是我没文化看不懂啊！',
    '14年间中文读过5遍以上，英文两遍，被水银泻地般的语言携裹到终章时，内心的激动依然不可抑制。那感觉仿佛是亲手将一件精美而无价的珍宝摔碎在地，带着一种秘密的，幸福的震颤',
    '开始很吃力，越读越上瘾。 惊人得叙事与潮水版的叙事，野兽般撕开真理得外衣。  原来那句经典的开场白，源自这本书。从四姑娘的第一本书，也就开始了他的抄袭生涯。',
    '一口气读完但却没有能力评价。',
    '“奥雷里亚诺，”他悲伤地敲下发报键，“马孔多在下雨。”',
    '多年以后，面对 iPhone9，正在发送朋友圈的我将会想起独自一人阅读羊皮卷的那个遥远的夜晚。那时的我坐在书桌前，以几乎不动的姿势一页页的翻阅，眼前的文字在昏暗的灯光下像水一样流过。不可思议的是，沉浸在这由难以承受的痛苦和无法摆脱的孤独构成的故事中时，我竟然涌起了类似于平静恬然的情绪，那是一种比夜晚幽会中疯狂而短暂的快乐更平和深沉的感觉。就好像我知道人终究会老去，但在阳光打到脸上的瞬间，仍然忍不住微笑。',
    '一个家族百年反复浮现的竟然就那么几个名字，加西亚真的很残酷。一代又一代就像被推上命运轮盘赌后不断开出的绝望点数，以致于在最后血脉断绝的一刻，我们感到的不是同情而是如释重负。然而家族可以终结，孤独却是无视时空的永恒存在。它从洪荒流淌至今，还将延绵万世，就像南美大陆奔腾壮丽的亚马逊河，碾碎一切人事物。',
    '一开始我还为华丽的辞藻，荒诞的情节，冗长的姓氏感到烦躁不堪，但随着故事的深入展开，我才发现我错了。那么繁复的一大家庭，七代人的辉煌与落寞，激情与孤独，坚毅与懒惰，世俗与超脱，疯狂与冷静，就这样蔓延开来……叫人感慨的同时不禁也要叹惜一下，孤独的何止是百年',
    '费尔南达真他妈烦人',
    '家族谱太混乱，刚看的时候觉得：这么丧尸居然能是名著。看完以后觉得：这么丧尸不是名著太他妈浪费了...',
    '大学时草草看过，这次是第二遍，顺带自制一张布恩迪亚家族谱。这本书的神奇之处在于，看完像是活了一世纪之久，一个人。',
    '家族的第一个人被捆在树上，最后一个人正被蚂蚁吃掉。',
    '我的睡前读物，确实起到了很好的催眠效果，每当我纠缠于这个奥雷利亚诺是哪个奥雷利亚诺的时候就倦意袭来倒头就睡。前半本的时候还勉强能搞清楚他们家的复杂关系，后来就彻底放弃了，我已经不在乎角色之间的关系，就专注于情节好了，WELL，一些隐喻呀之类的还算看明白了。但我真是烦啊……他们家人搞得神奇的过得苦的，特别是乌尔苏拉。',
    '庆幸是在我22岁的时候读到，没有太晚',
    '回忆没有归路，春天总是一去不返。车窗外瞬间闪过世间万象，如同将一首飞逝的长诗撕成碎片向着遗忘之乡一路抛洒。',
    '伟大的小说便是这样，倾注了作者全部的精神和价值重塑一个世界。而人物、情节、文笔、风格不过是帮助组织架构这伟大工程的工具。原来以为会读不下去，但一开页则根本停不下来。翻译也很加分。',
    '令人恐惧的伟大小说。无法摆脱的孤独与无力，梦想与激情皆成泡影，暴风之中，只剩回忆。',
    '1.翻译：范晔译本极为流畅精到。2.读后私感：恍若亲历了一个世纪的风霜血雨与精神洗礼，马孔多的一切都显得如此遥远而真切。3.手法：魔幻现实主义，全知上帝视角和口吻，闪前/预叙（"多年以后..."）与穿插回溯，博大的家族史诗格局与不断复沓轮回的人名（奥雷良诺·布恩迪亚与何塞·阿尔卡蒂奥），生动细腻的描写。4.感情：对童年与故土的缅怀，对笔下人物的深切同情，永恒孤独与疏离，情欲的泛滥vs爱情的缺失，拉美酷烈的独裁血泪路与永远遭遮蔽改写的历史，荒诞而无奈的宿命感。5.细节折选：看冰块的下午，飞毯，失眠遗忘症，报丧血流及火药味，小金鱼，糖果小动物，蕾梅黛丝的超凡脱俗，17个儿子额头的灰烬十字，佩特拉·科特斯的性爱与牲畜繁殖，持续4y11m2d的雨，马乌里肖与黄蝴蝶，蚂蚁，羊皮卷预言，飓风刮走的镜城。',
    '看完小说后，并不知道好在哪里，会不会被喷死。',
    '翻译的语言非常之美，阅读是一种享受。',
    '这是流淌着乱伦情结和孤独气质的庞大家族，看完以后你会沉浸在那种风云速变的魔幻之境',
    '最大的安静，是在吵闹的世界里，仍然可以听到自己的心跳声。',
    '“因为一个世纪的牌戏与阅历已经教会她这个家族的历史不过是一系列无可改变的重复，若不是车轴在进程中必不可免地磨损，这旋转的车轮将永远滚动下去。”',
    '许多年看不下去的书之一，前天晚上忽然翻起，读一百页才舍得睡。昨天在火车上读完。人名没把我弄晕，还是很清楚的。很好看，也许跟什么相遇都讲个时候，这时遇见，对了。印象最深的是何塞·阿尔卡蒂的血穿过门，过客厅，过街，进入家门，绕过地毯和餐桌，通知母亲他的死讯。翻译非常流畅，赞范老师。',
    '毫不吃力地读完了全书，但我依然不能完整复述出特尔内拉老公的全名。',
    '漫长曲折的历史，却只是那么几个名字，关在一个狭小的镇子里，头追着尾巴打着圈。',
    '让一让, 母牛们, 生命短暂啊',
    '这该是多么疯狂的一个疯子，写了书，居然被世人所认识。有那么多通俗易懂情感真挚的文字不读，偏偏选了马尔克斯。',
    '看完全书记得最清楚的一句话是“地球是圆的，就像个橙子”，也许我们所有的研究不过是在证实这个最简单的道理。其实我没读懂这本书，对我来说这注定是一本匆匆扫过然后用来压箱底，唯有等到时间慢慢过去，对孤独的理解更深了，将来某一天拿起来重新阅读的书。你们是真的读懂了吗？除了新奇的魔幻现实主义以外。',
    '有一个人的书，看前面三分之一恨不得打死他，看到后面就会越陷越深，这就是马尔克斯。恨不得打死他的原因，就是他的家族式起名法，就像莫言的招娣来娣各种娣',
    '用了一百年，用了七代人，用了二十六万字，用了马尔克斯一生的经历，用了无数读者的体会，诠释了两个字：“孤独”。',
    '很少用这么久时间读完一本书，不是读不下去，而是舍不得读完。',
    '世界新生伊始，许多事物还没有名字，提到的时候尚需用手指指点点。',
    '人生毫无意义',
    '乌尔苏拉，这个老女人，性格错综复杂，晚年对事物的清晰洞查，还是没有摆脱自身的积久的缺陷。而蕾梅黛丝的自由纯净，她的生活方式是我向往并追求的。她聪明又善良。阿玛兰黛．乌尔苏拉家族苍凉枷锁下，倔强的向日葵。费尔南达，这个悲哀到脚底的女人，简直不忍心拿什么去催毁她，这具理教的骷髅。',
    '现在这才算是真正的读过。删了之前的短评却又不知道该写些什么。不过作者应该是很钟意不加糖的咖啡，我看过他的每本书里至少都有一个人有这种嗜好。《百》和《霍》绝对称得上是名著，也是我目前为止看到的唯一的作者还活着的世界级名著。',
    '今天是我有生以来最初也是最漫长的一次拖延症发作终于终结的日子：大约二十年前，我打算开始读《百年孤独》，今天终于把它读完了。如果满分五星的话，这本小说应该打十星。以后还有谁跟我说《红楼梦》是古往今来最伟大的小说的，我的回应只有一个字：插死你。',
    '眼见他起高楼，眼见他宴宾客，眼见他楼塌了',
]
stop_word = '/Users/chunbo/www/geekbang/Python000-class01/Week_05/G20200389010058/stop_word.txt'
jieba.analyse.set_stop_words(stop_word)

string = ''
for keyword in text:
    string += keyword

# TF-IDF
result = jieba.analyse.extract_tags(string, topK=50, withWeight=False)
# pprint.pprint(result)

text_string = ','.join(result)

from wordcloud import WordCloud, STOPWORDS, ImageColorGenerator
from PIL import Image
from matplotlib import pyplot as plt
from matplotlib.pyplot import imread
import random
from os import path

print(text_string)
dir = path.dirname(__file__)
backgroundImage = np.array(Image.open(path.join(dir, 'sp_background.jpg')))
image_color = ImageColorGenerator(backgroundImage)
wc = WordCloud(
    width=400,
    height=300,
    margin=2,
    ranks_only=None,
    prefer_horizontal=0.9,
    mask=backgroundImage,
    color_func=None,
    max_words=200,  # 显示最多的词汇量
    stopwords=None,  # 停止词设置，修正词云图时需要设置
    random_state=None,
    background_color='#ffffff',  # 背景颜色设置，可以为具体颜色，比如：white或者16进制数值。
    font_step=1,
    mode='RGB',
    regexp=None,
    collocations=True,
    normalize_plurals=True,
    contour_width=0,
    colormap='viridis',  # matplotlib色图，可以更改名称进而更改整体风格
    contour_color='Blues',
    repeat=False,
    scale=2,
    min_font_size=20,
    max_font_size=200
)

wc.generate_from_text(text_string)

wc.recolor(color_func=image_color)
plt.imshow(wc, interpolation='bilinear')
plt.axis('off')
plt.tight_layout()
plt.show()
